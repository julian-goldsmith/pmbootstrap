# APKBUILD based on linux-vanilla aport. Changes:
# - add !check !tracedeps
# - do not create -dev subpackage
# - add 'xz' and 'dtbtool' as build dependencies
# - add `dtbTool` build hook to generate separate 'dt.img'
#
# Kernel config based on: arch/arm/configs/lineageos_bacon_defconfig
# Changes:
# - enable loadable module support
# - enable devtmpfs (needed for udev -> touch support in weston)
# - enable virtual terminal
# - disable ANDROID_PARANOID_NETWORK (removes network restrictions)

_vendor=oneplus
_flavor=oneplus-bacon
_version="dd65620ba04a8c6ba0e30553c9c95388daefae02"
_config="config-${_flavor}.armhf"

pkgname=linux-${_flavor}
pkgver=3.4.113
case $pkgver in
	*.*.*) _kernver=${pkgver%.*};;
	*.*) _kernver=$pkgver;;
esac
pkgrel=9
arch="armhf"
pkgdesc="LineageOS 14.1 kernel for OnePlus One (bacon)"
url="https://github.com/LineageOS/android_kernel_oneplus_msm8974"
depends=""
makedepends="perl sed installkernel bash gmp-dev bc linux-headers elfutils-dev python2 xz dtbtool openssl-dev"
options="!strip !check !tracedeps"
install=
# $pkgname-$_version.tar.gz::https://github.com/LineageOS/android_kernel_oneplus_msm8974/archive/${_version}.tar.gz
source="
	linux-bacon-v4.15-rc6.tar.gz
	${_config}
	compiler-gcc6.h
"
subpackages=""
license="GPL2"

_abi_release=${pkgver}
_carch="arm"
HOSTCC="${CC:-gcc}"
HOSTCC="${HOSTCC#${CROSS_COMPILE}}"

ksrcdir="$srcdir/linux-bacon"

prepare() {
	local _patch_failed=
	cd "$ksrcdir"

	# first apply patches in specified order
	for i in $source; do
		case $i in
		*.patch)
			msg "Applying $i..."
			if ! patch -s -p1 -N -i "$srcdir"/$i; then
				echo $i >>failed
				_patch_failed=1
			fi
			;;
		esac
	done

	if ! [ -z "$_patch_failed" ]; then
		error "The following patches failed:"
		cat failed
		return 1
	fi

	# gcc6 support
	cp -v "$srcdir"/compiler-gcc6.h "$ksrcdir"/include/linux/

	mkdir -p "$srcdir"/build
	cp "$srcdir"/$_config "$srcdir"/build/.config

	echo "--[ silentoldconfig ]--"
	yes "" | make -C "$ksrcdir" O="$srcdir"/build ARCH="$_carch" HOSTCC="$HOSTCC" \
		oldconfig
}

# this is so we can do `abuild menuconfig` to reconfigure kernel
menuconfig() {
	cd "$srcdir"/build

	echo "--[ menuconfig ]--"
	make ARCH="$_carch" menuconfig
	cp .config "$startdir"/$_config
}

build() {
	cd "$srcdir"/build
	unset LDFLAGS

	make ARCH="$_carch" CC="${CC:-gcc}" \
		KBUILD_BUILD_VERSION="$((pkgrel + 1))-Alpine" CONFIG_NO_ERROR_ON_MISMATCH=y

	echo "--[ Build modules ]--"
	make ARCH="$_carch" CC="${CC:-gcc}" \
		KBUILD_BUILD_VERSION="$((pkgrel + 1))-Alpine" CONFIG_NO_ERROR_ON_MISMATCH=y \
		modules

	dtbTool -s 2048 -p "scripts/dtc/" -o "arch/arm/boot/dt.img" "arch/arm/boot/"
}

package() {
	cat "$srcdir/build/arch/arm/boot/zImage" \
		"$srcdir/build/arch/arm/boot/dts/qcom-msm8974-oneplus-bacon.dtb" > \
		"$srcdir/build/arch/arm/boot/zImage-dtb"

	install -Dm644 "$srcdir"/build/arch/arm/boot/dt.img \
		"$pkgdir"/boot/dt.img

	install -Dm644 "$srcdir"/build/arch/arm/boot/zImage-dtb \
		"$pkgdir"/boot/vmlinuz-$_flavor

	install -D "$srcdir"/build/include/config/kernel.release \
		"$pkgdir"/usr/share/kernel/$_flavor/kernel.release

	cd "$srcdir"/build
	unset LDFLAGS

	echo "--[ Installing modules ]--"
	make ARCH="$_carch" CC="${CC:-gcc}" \
		KBUILD_BUILD_VERSION="$((pkgrel + 1))-Alpine" CONFIG_NO_ERROR_ON_MISMATCH=y \
		INSTALL_MOD_PATH="$pkgdir" INSTALL_MOD_STRIP=1 modules_install
}

sha512sums="98c2b91c370bcf63e1f0aa8b2a82c058261eac58c514d06a365a15cb89873ab9496fdb9d3c135aecd82957dbd829611c8c90475b47c68226e67aa1479c7f7338  linux-bacon-v4.15-rc6.tar.gz
35a518be5123e40e6a95af21dcdd2f12dcaee719ca2ee44c862b6b20067f13f40c0e28ac8627704fbf0dcdc0ef84a5106425733e08cb94bed9125cdfcacae2c3  config-oneplus-bacon.armhf
d80980e9474c82ba0ef1a6903b434d8bd1b092c40367ba543e72d2c119301c8b2d05265740e4104ca1ac5d15f6c4aa49e8776cb44264a9a28dc551e0d1850dcc  compiler-gcc6.h"
